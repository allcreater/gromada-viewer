# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake on multiple platforms

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      matrix:
        os: [ubuntu-latest, windows-latest]
        cmake_preset: [cl-x64-release, clang-x64-release]
        include:
          - os: windows-latest
            cmake_preset: cl-x64-release
          - os: ubuntu-latest
            cmake_preset: clang-x64-release
        exclude:
          - os: windows-latest
            cmake_preset: clang-x64-release
          - os: ubuntu-latest
            cmake_preset: cl-x64-release

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
        
    - name: Set reusable strings
      # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Enable Developer Command Prompt (Windows)
      if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@v1.13.0


    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libc++-dev libc++abi-dev libgl1-mesa-dev libxi-dev libxcursor-dev 

    - name: Configure CMake
      run: >
        cmake --preset ${{ matrix.cmake_preset }} 
        -B ${{ steps.strings.outputs.build-output-dir }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      # Execute tests defined by the CMake configuration. --build-config may be needed because the default Windows generator is a multi-config generator (Visual Studio generator).
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest

    - name: Upload artifacts (Windows)
      if : matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: windows-binaries
        path: |
            ${{ steps.strings.outputs.build-output-dir }}/src
            !${{ steps.strings.outputs.build-output-dir }}/src/cmake*